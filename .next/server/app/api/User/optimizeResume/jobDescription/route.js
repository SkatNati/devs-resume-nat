"use strict";(()=>{var e={};e.id=2874,e.ids=[2874],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5235:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>g,originalPathname:()=>S,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>c,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>y});var i={};r.r(i),r.d(i,{PATCH:()=>u});var n=r(95419),s=r(69108),o=r(99678),a=r(76520),p=r(39697);async function u(e){let t=await e.formData(),r=t.get("id"),i=t.get("JobDesc");if(!i)return new Response(JSON.stringify({message:"No job description provided."}),{status:400});try{if(await (0,a.Z)(),!await p.Z.findById(r))return new Response(JSON.stringify({message:"CV not found"}),{status:404});return await p.Z.findByIdAndUpdate(r,{$set:{"optimizeResume.0.jobDesc":i}},{new:!0}),new Response(JSON.stringify({message:"Job description updated successfully"}),{status:200})}catch(e){return console.error("Error updating job description: ",e),new Response(JSON.stringify({error:e.message}),{status:500})}}let d=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/User/optimizeResume/jobDescription/route",pathname:"/api/User/optimizeResume/jobDescription",filename:"route",bundlePath:"app/api/User/optimizeResume/jobDescription/route"},resolvedPagePath:"C:\\My Files\\Teneshu\\Talent\\Upwork\\Dev's Resume Finalizing\\Mine\\Dev-s-Resume-main\\app\\api\\User\\optimizeResume\\jobDescription\\route.js",nextConfigOutput:"",userland:i}),{requestAsyncStorage:m,staticGenerationAsyncStorage:l,serverHooks:c,headerHooks:g,staticGenerationBailout:y}=d,S="/api/User/optimizeResume/jobDescription/route";function f(){return(0,o.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:l})}},76520:(e,t,r)=>{r.d(t,{Z:()=>s});var i=r(11185),n=r.n(i);let s=async()=>{try{await n().connect("mongodb+srv://Salahdin:WqN5xnY7Y2gdyWQ4@serverlessinstance0.jzng7nc.mongodb.net/dev's-resume")}catch(e){throw Error("connection failed")}}},39697:(e,t,r)=>{r.d(t,{Z:()=>s});let i=r(11185),n=new i.Schema({user:{type:i.Schema.Types.ObjectId,ref:"User",required:!0},firstName:{type:String},lastName:{type:String},jobTitle:{type:String},email:{type:String},linkedin:{type:String},address:{type:String},phone:{type:String},summary:{type:String},isComplete:{type:Boolean,default:!1},isAiGenerate:{type:Boolean,default:!1},templateId:{type:String,default:"Dev Resume 1"},skills:[{label:{type:String,required:!0},selected:{type:Boolean,default:!1}}],education:[{institutionName:{type:String,required:!0},degreeName:{type:String,required:!0},fieldOfStudy:{type:String,required:!0},graduationYear:{type:String,required:!0},currentlyStudying:{type:Boolean}}],experience:[{companyName:{type:String,required:!0},startDate:{type:String,required:!0},endDate:{type:String},currentlyWorking:{type:Boolean,default:!1},jobTitle:{type:String,required:!0},responsibilities:{type:String,required:!0},achievements:{type:String}}],optimizeResume:[{extractedCvText:{parsedText:String,fileName:String},jobDesc:{type:String,required:!0}}]},{timestamps:!0}),s=i.models.Resume||i.model("Resume",n)},95419:(e,t,r)=>{e.exports=r(30517)}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),i=t.X(0,[1638],()=>r(5235));module.exports=i})();